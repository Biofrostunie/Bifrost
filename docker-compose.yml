version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: financial_education_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: financial_education_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-scripts:/docker-entrypoint-initdb.d
      - ./backend/prisma/migrations:/docker-entrypoint-initdb.d/migrations
    ports:
      - "5432:5432"
    networks:
      - financial_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d financial_education_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: financial_education_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - financial_network
    volumes:
      - redis_data:/data
    command: >
      redis-server
      --requirepass senha-forte-confia
      --appendonly yes
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "senha-forte-confia", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Backend NestJS Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
      args:
        NODE_ENV: production
    container_name: financial_education_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/financial_education_db
      JWT_SECRET: your-super-secret-jwt-key-change-in-production-2024-bifrost
      LOG_LEVEL: info
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 465
      SMTP_SECURE: 'true'
      SMTP_USER: noreplybifrost@gmail.com
      SMTP_PASS: qfchctnvfmyulonn
      EMAIL_FROM: noreplybifrost@gmail.com
      EMAIL_FROM_NAME: BifrÃ¶st Education Platform
      FRONTEND_URL: http://localhost:80
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: senha-forte-confia
      REDIS_DB: 0
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >-
      sh -c "npx prisma migrate deploy && npx prisma db seed && node dist/main.js"
    networks:
      - financial_network
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
      - ./backend/init-scripts:/app/init-scripts
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:3000/api/v1
    container_name: financial_education_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - financial_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local

networks:
  financial_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
